plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: '../jacoco.gradle'
apply from: '../detekt.gradle'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.takeaway"
        minSdk 27
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        def keystoreProperties = new Properties()
        def keystorePropertiesFile = rootProject.file('keystore/key.properties')
        if (keystorePropertiesFile.exists()) {
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            config {
                storeFile rootProject.file('keystore/android.keystore')
                storePassword keystoreProperties['storePass']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPass']
            }
        } else {
            config {
                storeFile rootProject.file('keystore/android.keystore')
                storePassword System.env['KEY_STORE_PASS']
                keyAlias System.env['KEY_ALIAS']
                keyPassword System.env['KEY_PASS']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
        jvmTarget = '11'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation project(':data')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation "androidx.navigation:navigation-compose:2.5.0-beta01"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_version"

    implementation 'com.jakewharton.timber:timber:5.0.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.12.1'
    testImplementation 'io.kotest:kotest-assertions-core:5.0.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}
